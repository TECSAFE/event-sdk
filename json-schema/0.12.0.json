{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "BasicCustomerEventPayload": {
      "additionalProperties": false,
      "description": "Payload for deleting customers",
      "properties": {
        "customer": {
          "description": "The customer ID",
          "type": "string"
        },
        "salesChannel": {
          "description": "The sales channel ID",
          "type": "string"
        }
      },
      "required": [
        "customer",
        "salesChannel"
      ],
      "type": "object"
    },
    "ButtonEmailEventPayload": {
      "additionalProperties": false,
      "description": "Payload for sending emails with one to two buttons",
      "properties": {
        "header": {
          "$ref": "#/definitions/EmailHeader"
        },
        "primaryButton": {
          "additionalProperties": false,
          "description": "The primary button",
          "properties": {
            "title": {
              "description": "The title of the button",
              "type": "string"
            },
            "url": {
              "description": "The URL the button should link to",
              "type": "string"
            }
          },
          "required": [
            "title",
            "url"
          ],
          "type": "object"
        },
        "secondaryButton": {
          "additionalProperties": false,
          "description": "The secondary button",
          "properties": {
            "title": {
              "description": "The title of the button",
              "type": "string"
            },
            "url": {
              "description": "The URL the button should link to",
              "type": "string"
            }
          },
          "required": [
            "title",
            "url"
          ],
          "type": "object"
        },
        "text": {
          "description": "The text content of the email",
          "type": "string"
        },
        "title": {
          "description": "The title of the email",
          "type": "string"
        }
      },
      "required": [
        "header",
        "title",
        "text",
        "primaryButton"
      ],
      "type": "object"
    },
    "CockpitAddRegistrationPayload": {
      "additionalProperties": false,
      "description": "Payload for add an user to the Cockpit",
      "properties": {
        "expiration_date": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "user": {
          "additionalProperties": false,
          "description": "user data attributes username, name, email, are Required and are self explaining type: is Required and Define the type of the user [internal┃external┃service_account┃internal_service_account] groups : Optional, array of uuids of the groups the user is in",
          "properties": {
            "email": {
              "type": "string"
            },
            "groups": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": [
            "username",
            "name",
            "email",
            "type"
          ],
          "type": "object"
        }
      },
      "required": [
        "user",
        "role",
        "expiration_date",
        "password"
      ],
      "type": "object"
    },
    "CustomerCreatedEventPayload": {
      "additionalProperties": false,
      "properties": {
        "customer": {
          "description": "The customer ID",
          "type": "string"
        },
        "salesChannel": {
          "description": "The sales channel ID",
          "type": "string"
        }
      },
      "required": [
        "customer",
        "salesChannel"
      ],
      "type": "object"
    },
    "CustomerDeleteEventPayload": {
      "additionalProperties": false,
      "properties": {
        "customer": {
          "description": "The customer ID",
          "type": "string"
        },
        "salesChannel": {
          "description": "The sales channel ID",
          "type": "string"
        }
      },
      "required": [
        "customer",
        "salesChannel"
      ],
      "type": "object"
    },
    "EmailHeader": {
      "additionalProperties": false,
      "description": "The header of an email. Reused in all email events.",
      "properties": {
        "bcc": {
          "description": "BCC stands for \"blind carbon copy\". Just like CC, BCC is a way of sending copies of an email to other people. The difference between the two is that no one can see the list of recipients in a BCC message. The BCC list is private.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cc": {
          "description": "CC stands for \"carbon copy\". Sends a copy of the email to the people you list, in addition to the person in the To field. Note that everyone who receives a copy of the message will be able to see the list of recipients in the CC field. In nearly all cases you should use the \"bcc\" field instead of the \"cc\" field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "replyTo": {
          "description": "Set where replies to the email should be sent.",
          "type": "string"
        },
        "returnPath": {
          "description": "A return path is used to specify where bounced emails are sent and is placed in the email header. It’s an SMTP address separate from the sending address. This is a good practice for email delivery, as it gives bounced emails a place to land – other than in an inbox – making it easier to avoid sending notifications to bounced addresses. However, it’s important for authentication to ensure that the return path domain is the same as the sending domain. Brands use a return path that  stores all bounced emails, which helps them improve deliverability, making them more credible to inbox service providers (ISPs) like Gmail and Yahoo Mail. Return path also helps track email bounces and maintain email list hygiene.",
          "type": "string"
        },
        "subject": {
          "description": "The subject of the email.",
          "type": "string"
        },
        "to": {
          "description": "The email address of the recipient. You can include multiple email addresses, separated by commas. Note that everyone who receives a copy of the message will be able to see the list of recipients in the To field. If you want to send multiple emails without disclosing addresses, use the \"bcc\" field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "subject"
      ],
      "type": "object"
    },
    "GenericEmailEventPayload": {
      "additionalProperties": false,
      "description": "Payload for sending generic emails",
      "properties": {
        "header": {
          "$ref": "#/definitions/EmailHeader"
        },
        "text": {
          "description": "The text content of the email",
          "type": "string"
        },
        "title": {
          "description": "The title of the email",
          "type": "string"
        }
      },
      "required": [
        "header",
        "title",
        "text"
      ],
      "type": "object"
    },
    "MergeCustomerPayload": {
      "additionalProperties": false,
      "description": "Payload for merging customers",
      "properties": {
        "newCustomerId": {
          "description": "The new customer ID",
          "type": "string"
        },
        "newExternalCustomerId": {
          "description": "The new customer ID",
          "type": "string"
        },
        "newSalesChannelId": {
          "description": "The new sales channel ID",
          "type": "string"
        },
        "oldCustomerId": {
          "description": "The old customer ID",
          "type": "string"
        },
        "oldExternalCustomerId": {
          "description": "The old external customer ID",
          "type": "string"
        },
        "oldSalesChannelId": {
          "description": "The old sales channel ID",
          "type": "string"
        }
      },
      "required": [
        "oldExternalCustomerId",
        "newExternalCustomerId",
        "oldSalesChannelId",
        "newSalesChannelId",
        "oldCustomerId",
        "newCustomerId"
      ],
      "type": "object"
    },
    "EventsMap": {
      "type": "object",
      "properties": {
        "customer.merge": {
          "type": "string",
          "const": "MergeCustomerPayload"
        },
        "customer.delete": {
          "type": "string",
          "const": "CustomerDeleteEventPayload"
        },
        "customer.created": {
          "type": "string",
          "const": "CustomerCreatedEventPayload"
        },
        "email.generic": {
          "type": "string",
          "const": "GenericEmailEventPayload"
        },
        "email.button": {
          "type": "string",
          "const": "ButtonEmailEventPayload"
        },
        "cockpit.addRegistration": {
          "type": "string",
          "const": "CockpitAddRegistrationPayload"
        }
      },
      "required": [
        "customer.merge",
        "customer.delete",
        "customer.created",
        "email.generic",
        "email.button",
        "cockpit.addRegistration"
      ],
      "additionalProperties": false
    }
  }
}