import { readdirSync, statSync, existsSync, writeFileSync } from 'fs';
import path from 'path';

if (!existsSync('./src')) {
  console.error('"src" directory not found');
  process.exit(1);
}

const collectFiles = (dir, options = {}) => {
  const { excludeDirs = [], excludeFiles = [] } = options;
  const collectedFiles = [];

  const scan = (currentDir) => {
    console.log(`Scanning ${currentDir}`);
    for (const file of readdirSync(currentDir)) {
      const fullPath = path.join(currentDir, file);
      const relativePath = './' + path.relative('.', fullPath).replace(/\\/g, '/');
      if (statSync(fullPath).isDirectory()) {
        const isExcludedDir = excludeDirs.some(excludedDir => relativePath.startsWith(excludedDir));
        if (!isExcludedDir) {
          scan(fullPath);
        } else {
          console.log(`Skipping directory: ${relativePath}`);
        }
      } else {
        const isExcludedFile = excludeFiles.includes(relativePath) || file === 'index.ts';
        if (!isExcludedFile && file.endsWith('.ts')) {
          collectedFiles.push(relativePath);
          console.log(`Found file: ${relativePath}`);
        } else {
          console.log(`Skipping file: ${relativePath}`);
        }
      }
    }
  };

  scan(dir);

  return collectedFiles;
};

// Collect files for src/types/index.ts
const typesFiles = collectFiles('./src/types', {
  excludeFiles: ['./src/types/index.ts'],
});

// Write src/types/index.ts
writeFileSync('./src/types/index.ts', [
  '// This file is automatically generated by build-index.mjs',
  '// Do not edit it manually',
  '',
  ...typesFiles.map((file) => `export * from './${path.relative('./src/types', file).replace(/\\/g, '/').replace('.ts', '')}';`),
  '',
].join('\n'));

console.log('\nWrote src/types/index.ts\n');

// Collect files for src/index.ts
const srcFiles = collectFiles('./src', {
  excludeFiles: ['./src/index.ts', './src/types/index.ts'],
});

// Write src/index.ts
writeFileSync('./src/index.ts', [
  '// This file is automatically generated by build-index.mjs',
  '// Do not edit it manually',
  '',
  ...srcFiles.map((file) => `export * from './${path.relative('./src', file).replace(/\\/g, '/').replace('.ts', '')}';`),
  '',
].join('\n'));

console.log('\nWrote src/index.ts');
